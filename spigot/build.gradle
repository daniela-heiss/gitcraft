// SPDX-FileCopyrightText: 2024 TOP Team 8 GitCraft
//
// SPDX-License-Identifier: EUPL-1.2
// SPDX-License-Identifier: GPL-3.0-or-later

plugins {
    id 'java'
}

group = 'net'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }



task copyEula(type: Copy) {
    from 'resources' 
    include 'eula.txt' 
    into 'server' 
}

task copyOps(type: Copy) {
    from 'resources' 
    include 'ops.json' 
    into 'server' 
}

task copyPlugin(type: Copy, dependsOn: build ) {
    def pluginFolder = file('build/libs') 
    def serverPluginsDir = file('server/plugins') 
    serverPluginsDir.mkdirs()
    from pluginFolder
    include '*.jar'
    into serverPluginsDir
}

task downloadServer() {
    def serverUrl = 'https://download.getbukkit.org/spigot/spigot-1.20.4.jar'
    def outputFile = file('server/minecraft_server.jar')

  
        if (outputFile.exists()) {
            println "Server JAR already downloaded. Skipping..."
            return
        } else {
            println "Downloading server JAR..."
            exec {
                commandLine 'curl', '-o', outputFile.toString(), serverUrl
            }
        }
}


task downloadPlugins() {
    def plugins = [
        'WorldEdit': 'https://dev.bukkit.org/projects/worldedit/files/5077477/download',
        'Multiverse-Core': 'https://dev.bukkit.org/projects/multiverse-core/files/4744018/download',
        'CoreProtect' : 'https://www.patreon.com/file?h=89830486&i=15920178'
    ]

    plugins.each { pluginName, pluginUrl ->
        def pluginFile = file("server/plugins/${pluginName}.jar")
        if (pluginFile.exists()) {
            println "${pluginName} already downloaded. Skipping..."
            return
        } else {
            println "Downloading ${pluginName}..."
            exec {
                commandLine 'curl', '-L', '-o', pluginFile.toString(), pluginUrl
            }
        }
    }
}

task runDevServer(type: Exec, dependsOn: ['downloadServer', 'downloadPlugins', 'copyEula', 'copyOps', 'copyPlugin']) {
    def serverJar = file('server/minecraft_server.jar')
    commandLine 'java', '-jar', serverJar
    workingDir file('server')
    }

}
